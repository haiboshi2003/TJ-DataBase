{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      caseID: \"\",\n      process: \"待调查案件\",\n      cases: [],\n      policemen: \"\",\n      policemenID: \"\",\n      selectCaseID: \"\",\n      team: \"\",\n      isSet: true\n    };\n  },\n  methods: {\n    handleMouseMove(event) {\n      const x = event.pageX - event.target.offsetLeft;\n      const y = event.pageY - event.target.offsetTop;\n      event.target.style.setProperty(\"--x\", `${x}px`);\n      event.target.style.setProperty(\"--y\", `${y}px`);\n    },\n    async setTeam(index, Case) {\n      this.process = \"选择办案人员\";\n      await this.getPolicemen();\n      this.selectCaseID = Case.caseID;\n    },\n    async getCases() {\n      try {\n        const response = await axios.get(`http://localhost:7078/api/caseInvestigation/queryCase?caseID=${encodeURIComponent(this.caseID)}`);\n        for (let i = 0; i < response.data.length; i++) {\n          // 将 alarmTime 中的 'T' 替换为空格\n          response.data[i].registerTime = response.data[i].registerTime.replace('T', ' ');\n        }\n        this.cases = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        ElMessage({\n          showClose: true,\n          message: \"获取立案列表失败！\",\n          type: 'error',\n          duration: 5000\n        });\n      }\n    },\n    async getPolicemen() {\n      try {\n        const response = await axios.get(`http://localhost:7078/api/caseInvestigation/queryPolicemen?policemenID=${encodeURIComponent(this.policemenID)}`);\n        this.policemen = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        ElMessage({\n          showClose: true,\n          message: \"获取警员列表失败！\",\n          type: 'error',\n          duration: 5000\n        });\n      }\n    },\n    goBack() {\n      this.process = \"待调查案件\";\n      this.selectCaseID = \"\";\n    },\n    selectPolicemen(selection) {\n      this.team = selection;\n      if (this.team.length > 0) {\n        this.isSet = false;\n      } else this.isSet = true;\n    },\n    async finish() {\n      try {\n        await axios.put(`http://localhost:7078/api/caseInvestigation/modifyCaseStatus?caseID=${encodeURIComponent(this.selectCaseID)}`);\n        this.process = \"完成\";\n        this.selectCaseID = \"\";\n        this.team = \"\";\n        await this.getCases();\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        ElMessage({\n          showClose: true,\n          message: \"进行调查失败！\",\n          type: 'error',\n          duration: 5000\n        });\n      }\n      ;\n    },\n    backToH() {\n      this.process = \"待调查案件\";\n    }\n  },\n  async created() {\n    await this.getCases();\n  },\n  watch: {\n    async caseID() {\n      await this.getCases();\n    },\n    async policemenID() {\n      await this.getPolicemen();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","caseID","process","cases","policemen","policemenID","selectCaseID","team","isSet","methods","handleMouseMove","event","x","pageX","target","offsetLeft","y","pageY","offsetTop","style","setProperty","setTeam","index","Case","getPolicemen","getCases","response","get","encodeURIComponent","i","length","registerTime","replace","error","ElMessage","showClose","message","type","duration","goBack","selectPolicemen","selection","finish","put","backToH","created","watch"],"sources":["H:\\GitHub-Repository\\2023-TJU-DBD-Police-Affair-System\\My-front\\dbproject\\src\\components\\CaseInvestigation.vue"],"sourcesContent":["<template>\n  <el-header class=\"sub-header\" @mousemove=\"handleMouseMove\">\n    <div>&nbsp;&nbsp;警务处理系统&nbsp;>&nbsp;案件办理</div>\n  </el-header>\n\n  <el-table v-if=\"process === '待调查案件'\" :data=\"cases\" height=\"450\" @wheel.passive.stop stripe\n    style=\"width: 100%; margin-top: 10vh\">\n    <el-table-column label=\"案件编号\" prop=\"caseID\" sortable width=\"104px\" />\n    <el-table-column label=\"案件类型\" prop=\"caseType\" sortable width=\"104px\" />\n    <el-table-column label=\"案件状态\" prop=\"status\" sortable width=\"104px\" />\n    <el-table-column label=\"登记时间\" prop=\"registerTime\" width=\"105px\" sortable />\n    <el-table-column label=\"案发地点\" prop=\"address\" sortable />\n    <el-table-column label=\"案件等级\" prop=\"ranking\" sortable width=\"104px\" />\n    <el-table-column align=\"right\" width=\"268px\">\n      <template #header>\n        <table>\n          <tr>\n            <td><el-text type=\"primary\" style=\"display: inline-block;\">筛选案件编号：</el-text></td>\n            <td><el-input v-model=\"caseID\" size=\"small\" placeholder=\"请输入案件编号\"\n                style=\"display: inline-block; width: 130px; height: 25px\" clearable maxlength=\"8\" /></td>\n          </tr>\n        </table>\n      </template>\n      <template #default=\"scope\">\n        <el-button size=\"small\" type=\"primary\" @click=\"setTeam(scope.$index, scope.row)\">进行调查</el-button>\n      </template>\n    </el-table-column>\n  </el-table>\n\n  <div v-if=\"process === '选择办案人员'\" style=\"text-align: center\">\n    <el-table :data=\"policemen\" height=\"400\" @selection-change=\"selectPolicemen\" @wheel.passive.stop stripe\n      style=\"width: 100%; margin-top: 10vh\">\n      <el-table-column type=\"selection\" />\n      <el-table-column label=\"警员编号\" prop=\"policeNum\" sortable />\n      <el-table-column label=\"姓名\" prop=\"policeName\" sortable />\n      <el-table-column label=\"性别\" prop=\"gender\" sortable />\n      <el-table-column label=\"民族\" prop=\"nation\" sortable />\n      <el-table-column label=\"状态\" prop=\"status\" sortable />\n      <el-table-column label=\"职位\" prop=\"position\" sortable />\n      <el-table-column align=\"left\" width=\"260px\">\n        <template #header>\n          <table>\n            <tr>\n              <td><el-text type=\"primary\" style=\"display: inline-block; width: 130px\">当前选择{{ selectCaseID }}</el-text>\n              </td>\n              <td><el-button size=\"small\" type=\"primary\" @click=\"goBack\">重选案件</el-button></td>\n            </tr>\n            <tr>\n              <td><el-text type=\"primary\" style=\"display: inline-block;\">筛选警员编号：</el-text></td>\n              <td><el-input v-model=\"policemenID\" size=\"small\" placeholder=\"请输入警员编号\"\n                  style=\"display: inline-block; width: 100px; height: 25px\" /></td>\n            </tr>\n          </table>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-button type=\"primary\" @click=\"finish\" :disabled=\"isSet\" style=\"margin-top: 10px\">调查此案件</el-button>\n  </div>\n\n  <div v-if=\"process === '完成'\" style=\"text-align: center\">\n    <el-result icon=\"success\" title=\"案件已设为调查\" sub-title=\"点击按钮返回立案列表\">\n      <template #extra>\n        <el-button type=\"primary\" @click=\"backToH\">返回</el-button>\n      </template>\n    </el-result>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      caseID: \"\",\n      process: \"待调查案件\",\n      cases: [],\n      policemen: \"\",\n      policemenID: \"\",\n      selectCaseID: \"\",\n      team: \"\",\n      isSet: true,\n    };\n  },\n  methods: {\n    handleMouseMove(event) {\n      const x = event.pageX - event.target.offsetLeft;\n      const y = event.pageY - event.target.offsetTop;\n\n      event.target.style.setProperty(\"--x\", `${x}px`);\n      event.target.style.setProperty(\"--y\", `${y}px`);\n    },\n    async setTeam(index, Case) {\n      this.process = \"选择办案人员\";\n      await this.getPolicemen();\n      this.selectCaseID = Case.caseID;\n    },\n    async getCases() {\n      try {\n        const response = await axios.get(`http://localhost:7078/api/caseInvestigation/queryCase?caseID=${encodeURIComponent(this.caseID)}`);\n\n        for (let i = 0; i < response.data.length; i++) {\n          // 将 alarmTime 中的 'T' 替换为空格\n          response.data[i].registerTime = response.data[i].registerTime.replace('T', ' ');\n        }\n        this.cases = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        ElMessage({\n          showClose: true,\n          message: \"获取立案列表失败！\",\n          type: 'error',\n          duration: 5000,\n        });\n      }\n    },\n    async getPolicemen() {\n      try {\n        const response = await axios.get(`http://localhost:7078/api/caseInvestigation/queryPolicemen?policemenID=${encodeURIComponent(this.policemenID)}`);\n        this.policemen = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        ElMessage({\n          showClose: true,\n          message: \"获取警员列表失败！\",\n          type: 'error',\n          duration: 5000,\n        });\n      }\n    },\n    goBack() {\n      this.process = \"待调查案件\";\n      this.selectCaseID = \"\";\n    },\n    selectPolicemen(selection) {\n      this.team = selection;\n      if (this.team.length > 0) {\n        this.isSet = false;\n      }\n      else\n        this.isSet = true;\n\n    },\n    async finish() {\n      try {\n        await axios.put(`http://localhost:7078/api/caseInvestigation/modifyCaseStatus?caseID=${encodeURIComponent(this.selectCaseID)}`);\n        this.process = \"完成\";\n        this.selectCaseID = \"\";\n        this.team = \"\";\n        await this.getCases();\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        ElMessage({\n          showClose: true,\n          message: \"进行调查失败！\",\n          type: 'error',\n          duration: 5000,\n        });\n      };\n\n\n    },\n    backToH() {\n      this.process = \"待调查案件\";\n    }\n  },\n  async created() {\n    await this.getCases();\n  },\n  watch: {\n    async caseID() {\n      await this.getCases();\n    },\n    async policemenID() {\n      await this.getPolicemen();\n    }\n  }\n};\n</script>\n\n<style>\n.sub-header {\n  overflow: hidden;\n  display: flex;\n  position: absolute;\n  top: 70px;\n  left: 199px;\n  width: calc(100% - 199px);\n  height: 7vh;\n  min-height: 40px;\n  align-items: center;\n  /* 文字竖直方向居中对齐 */\n  background-color: #1f2cdf;\n  box-shadow: inset -500px 0px 200px 0px rgba(4, 0, 113, 0.856);\n  color: #ffffff;\n  font-size: 28px;\n}\n\n.sub-header::before {\n  --size: 0;\n  content: '';\n  position: absolute;\n  left: var(--x);\n  top: var(--y);\n  width: var(--size);\n  height: var(--size);\n  background: radial-gradient(circle closest-side, #5a65ff, transparent);\n  transform: translate(-50%, -50%);\n  transition: width .2s ease, height .2s ease;\n}\n\n.sub-header:hover::before {\n  --size: 400px;\n}\n\n.main {\n  margin-top: 10vh;\n}\n\n.caseContainer {\n  width: 200pt;\n  background-color: rgb(20, 0, 98);\n  color: white;\n  position: relative;\n}\n\n.policeContainer {\n  width: 200pt;\n  background-color: rgb(98, 0, 0);\n  color: white;\n  position: relative;\n}\n\n.title {\n  text-align: center;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}