{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    lineHeight: `${size - lineWidth * 2}px`,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`${componentCls}-string`]: {\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: '50%'\n      },\n      transformOrigin: '0 center'\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: _extends(_extends(_extends(_extends({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${lineWidth}px ${lineType} transparent`,\n      [`&-image`]: {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\n      [`&-lg`]: _extends({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\n      [`&-sm`]: _extends({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [`${componentCls}`]: {\n        borderColor: groupBorderColor\n      },\n      [`> *:not(:first-child)`]: {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [`${componentCls}-group-popover`]: {\n      [`${componentCls} + ${componentCls}`]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nexport default genComponentStyleHook('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    textFontSizeLG: fontSizeHeading3,\n    textFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n});","map":{"version":3,"names":["_extends","genComponentStyleHook","mergeToken","resetComponent","genBaseStyle","token","antCls","componentCls","iconCls","avatarBg","avatarColor","containerSize","containerSizeLG","containerSizeSM","textFontSize","textFontSizeLG","textFontSizeSM","borderRadius","borderRadiusLG","borderRadiusSM","lineWidth","lineType","avatarSizeStyle","size","fontSize","radius","width","height","lineHeight","position","left","_skip_check_","value","transformOrigin","margin","display","overflow","color","whiteSpace","textAlign","verticalAlign","background","border","objectFit","genGroupStyle","groupBorderColor","groupOverlapping","groupSpace","borderColor","marginInlineStart","colorTextLightSolid","colorTextPlaceholder","avatarToken","controlHeight","controlHeightLG","controlHeightSM","fontSizeLG","fontSizeXL","fontSizeHeading3","marginXS","marginXXS","colorBorderBg","Math","round"],"sources":["H:/GitHub-Repository/2023-TJU-DBD-Police-Affair-System/My-front/dbproject/node_modules/ant-design-vue/es/avatar/style/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\r\nimport { resetComponent } from '../../style';\r\nconst genBaseStyle = token => {\r\n  const {\r\n    antCls,\r\n    componentCls,\r\n    iconCls,\r\n    avatarBg,\r\n    avatarColor,\r\n    containerSize,\r\n    containerSizeLG,\r\n    containerSizeSM,\r\n    textFontSize,\r\n    textFontSizeLG,\r\n    textFontSizeSM,\r\n    borderRadius,\r\n    borderRadiusLG,\r\n    borderRadiusSM,\r\n    lineWidth,\r\n    lineType\r\n  } = token;\r\n  // Avatar size style\r\n  const avatarSizeStyle = (size, fontSize, radius) => ({\r\n    width: size,\r\n    height: size,\r\n    lineHeight: `${size - lineWidth * 2}px`,\r\n    borderRadius: '50%',\r\n    [`&${componentCls}-square`]: {\r\n      borderRadius: radius\r\n    },\r\n    [`${componentCls}-string`]: {\r\n      position: 'absolute',\r\n      left: {\r\n        _skip_check_: true,\r\n        value: '50%'\r\n      },\r\n      transformOrigin: '0 center'\r\n    },\r\n    [`&${componentCls}-icon`]: {\r\n      fontSize,\r\n      [`> ${iconCls}`]: {\r\n        margin: 0\r\n      }\r\n    }\r\n  });\r\n  return {\r\n    [componentCls]: _extends(_extends(_extends(_extends({}, resetComponent(token)), {\r\n      position: 'relative',\r\n      display: 'inline-block',\r\n      overflow: 'hidden',\r\n      color: avatarColor,\r\n      whiteSpace: 'nowrap',\r\n      textAlign: 'center',\r\n      verticalAlign: 'middle',\r\n      background: avatarBg,\r\n      border: `${lineWidth}px ${lineType} transparent`,\r\n      [`&-image`]: {\r\n        background: 'transparent'\r\n      },\r\n      [`${antCls}-image-img`]: {\r\n        display: 'block'\r\n      }\r\n    }), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\r\n      [`&-lg`]: _extends({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\r\n      [`&-sm`]: _extends({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\r\n      '> img': {\r\n        display: 'block',\r\n        width: '100%',\r\n        height: '100%',\r\n        objectFit: 'cover'\r\n      }\r\n    })\r\n  };\r\n};\r\nconst genGroupStyle = token => {\r\n  const {\r\n    componentCls,\r\n    groupBorderColor,\r\n    groupOverlapping,\r\n    groupSpace\r\n  } = token;\r\n  return {\r\n    [`${componentCls}-group`]: {\r\n      display: 'inline-flex',\r\n      [`${componentCls}`]: {\r\n        borderColor: groupBorderColor\r\n      },\r\n      [`> *:not(:first-child)`]: {\r\n        marginInlineStart: groupOverlapping\r\n      }\r\n    },\r\n    [`${componentCls}-group-popover`]: {\r\n      [`${componentCls} + ${componentCls}`]: {\r\n        marginInlineStart: groupSpace\r\n      }\r\n    }\r\n  };\r\n};\r\nexport default genComponentStyleHook('Avatar', token => {\r\n  const {\r\n    colorTextLightSolid,\r\n    colorTextPlaceholder\r\n  } = token;\r\n  const avatarToken = mergeToken(token, {\r\n    avatarBg: colorTextPlaceholder,\r\n    avatarColor: colorTextLightSolid\r\n  });\r\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\r\n}, token => {\r\n  const {\r\n    controlHeight,\r\n    controlHeightLG,\r\n    controlHeightSM,\r\n    fontSize,\r\n    fontSizeLG,\r\n    fontSizeXL,\r\n    fontSizeHeading3,\r\n    marginXS,\r\n    marginXXS,\r\n    colorBorderBg\r\n  } = token;\r\n  return {\r\n    containerSize: controlHeight,\r\n    containerSizeLG: controlHeightLG,\r\n    containerSizeSM: controlHeightSM,\r\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\r\n    textFontSizeLG: fontSizeHeading3,\r\n    textFontSizeSM: fontSize,\r\n    groupSpace: marginXXS,\r\n    groupOverlapping: -marginXS,\r\n    groupBorderColor: colorBorderBg\r\n  };\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}